{"ast":null,"code":"class Api {\n  constructor(url, token) {\n    this._url = url;\n    this._token = token;\n  }\n  _getHeaders() {\n    return {\n      authorization: this._token,\n      'Content-Type': 'application/json'\n    };\n  }\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._getHeaders()\n    }).then(this._handleResponse);\n  }\n  getUser() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._getHeaders()\n    }).then(this._handleResponse);\n  }\n  createNewProfile(item) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._getHeaders(),\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about\n      })\n    }).then(this._handleResponse);\n  }\n  createNewAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._getHeaders(),\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._handleResponse);\n  }\n  createNewCard(item) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._getHeaders(),\n      body: JSON.stringify(item)\n    }).then(this._handleResponse);\n  }\n  addLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._getHeaders()\n    }).then(this._handleResponse);\n  }\n  deleteLike(id) {\n    return fetch(`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._getHeaders()\n    }).then(this._handleResponse);\n  }\n  deleteCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._getHeaders()\n    }).then(this._handleResponse);\n  }\n}\n\n//экземпляр класса Api\nexport const api = new Api('https://mesto.nomoreparties.co/v1/cohort-64', 'e707bb6d-10e3-4b12-a702-f21c992d2e8f');","map":{"version":3,"names":["Api","constructor","url","token","_url","_token","_getHeaders","authorization","_handleResponse","res","ok","json","Promise","reject","status","statusText","getInitialCards","fetch","headers","then","getUser","createNewProfile","item","method","body","JSON","stringify","name","about","createNewAvatar","data","avatar","createNewCard","addLike","id","deleteLike","deleteCard","api"],"sources":["C:/Users/Надюшонок/Desktop/praktikum/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor (url, token) {\n    this._url = url;\n    this._token = token;\n  }\n  _getHeaders () {\n    return {\n      authorization: this._token,\n      'Content-Type': 'application/json'\n    };\n  }\n\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n  }\n\n  getInitialCards () {\n    return fetch (`${this._url}/cards`, {\n      headers: this._getHeaders()\n    })\n    .then(this._handleResponse);\n}\n\n  getUser () {\n    return fetch (`${this._url}/users/me`, {\n      headers: this._getHeaders()\n    })\n    .then(this._handleResponse);\n  }\n\n  createNewProfile (item) {\n    return fetch (`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._getHeaders(),\n      body: JSON.stringify({\n        name: item.name,\n        about: item.about\n      })\n    })\n    .then(this._handleResponse);\n  }\n\n  createNewAvatar(data) {\n    return fetch (`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._getHeaders(),\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    })\n    .then(this._handleResponse);\n  }\n\n  createNewCard (item) {\n    return fetch (`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._getHeaders(),\n      body: JSON.stringify(item)\n    })\n    .then(this._handleResponse);\n  }\n\n  addLike (id) {\n    return fetch (`${this._url}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._getHeaders(),\n    })\n    .then(this._handleResponse);\n  }\n\n  deleteLike (id) {\n    return fetch (`${this._url}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._getHeaders(),\n    })\n    .then(this._handleResponse);\n  }\n\n  deleteCard(id) {\n    return fetch (`${this._url}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._getHeaders(),\n    })\n    .then(this._handleResponse);\n  }\n\n}\n\n//экземпляр класса Api\nexport const api = new Api(\n  'https://mesto.nomoreparties.co/v1/cohort-64',\n  'e707bb6d-10e3-4b12-a702-f21c992d2e8f'\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}