{"ast":null,"code":"export default class Card {\n  constructor(data, currentUserId, templateSelector, zoomImage, handleCardClick, likeCard, deleteLikeCard) {\n    this._name = data.name;\n    this._link = data.link;\n    this._likes = data.likes;\n    this._id = data._id;\n    this._isOwner = data.owner._id === currentUserId;\n    this._currentUserId = currentUserId;\n    this._owner = data.owner._id;\n    this._templateSelector = templateSelector;\n    this._zoomImage = zoomImage;\n    this._handleCardClick = handleCardClick;\n    this._likeCard = likeCard;\n    this._deleteLikeCard = deleteLikeCard;\n    this._element = this._getTemplate();\n    this._cardImage = this._element.querySelector(\".element__img\");\n    this._cardName = this._element.querySelector(\".element__title\");\n    this._likeButton = this._element.querySelector(\".element__like\");\n    this._deleteButton = this._element.querySelector(\".element__delete\");\n    this._likeQuantity = this._element.querySelector('.element__like-quantity');\n  }\n\n  //добавляем лайк карточке\n  _addLikeCard() {\n    return this._likes.find(userLike => userLike._id === this._currentUserId);\n  }\n\n  //получаем разметку\n  _getTemplate() {\n    const newCard = document.querySelector(this._templateSelector).content.querySelector(\".element\").cloneNode(true);\n    return newCard;\n  }\n\n  //вставляем данные в разметку и подготовим карточку к публикации\n  generateCard() {\n    this._setEventListeners();\n    this._cardImage.src = this._link;\n    this._cardImage.alt = this._name;\n    this._cardName.textContent = this._name;\n    this._likeQuantity.textContent = this._likes.length;\n    if (this._addLikeCard()) {\n      this._likeButton.classList.add('element__like_active');\n    } else {\n      this._likeButton.classList.remove('element__like_active');\n    }\n    if (!this._isOwner) {\n      this._deleteButton.remove();\n    }\n    return this._element;\n  }\n  toggleLike(data) {\n    this._likeQuantity.textContent = data.likes.length;\n    this._likeButton.classList.toggle(\"element__like_active\");\n  }\n  _setLikes(evt) {\n    if (evt.target.classList.contains('element__like_active')) {\n      this._deleteLikeCard(this._id, this);\n    } else {\n      this._likeCard(this._id, this);\n    }\n  }\n  deleteCard() {\n    this._element.remove();\n    this._element = null;\n  }\n  _setEventListeners() {\n    this._deleteButton.addEventListener(\"click\", () => {\n      this._handleCardClick(this._id);\n    });\n    this._likeButton.addEventListener(\"click\", evt => {\n      this._setLikes(evt);\n    });\n    this._cardImage.addEventListener(\"click\", () => {\n      this._zoomImage(this._name, this._link);\n    });\n  }\n}","map":{"version":3,"names":["Card","constructor","data","currentUserId","templateSelector","zoomImage","handleCardClick","likeCard","deleteLikeCard","_name","name","_link","link","_likes","likes","_id","_isOwner","owner","_currentUserId","_owner","_templateSelector","_zoomImage","_handleCardClick","_likeCard","_deleteLikeCard","_element","_getTemplate","_cardImage","querySelector","_cardName","_likeButton","_deleteButton","_likeQuantity","_addLikeCard","find","userLike","newCard","document","content","cloneNode","generateCard","_setEventListeners","src","alt","textContent","length","classList","add","remove","toggleLike","toggle","_setLikes","evt","target","contains","deleteCard","addEventListener"],"sources":["C:/Users/Надюшонок/Desktop/praktikum/mesto-react/src/components/Card.js"],"sourcesContent":["export default class Card {\n  constructor(data, currentUserId, templateSelector, zoomImage, handleCardClick, likeCard, deleteLikeCard) {\n    this._name = data.name;\n    this._link = data.link;\n    this._likes = data.likes;\n    this._id = data._id;\n\n    this._isOwner = data.owner._id === currentUserId;\n    this._currentUserId = currentUserId;\n    this._owner = data.owner._id;\n\n    this._templateSelector = templateSelector;\n    this._zoomImage = zoomImage;\n\n    this._handleCardClick = handleCardClick;\n    this._likeCard = likeCard;\n    this._deleteLikeCard = deleteLikeCard;\n\n    this._element = this._getTemplate();\n    this._cardImage = this._element.querySelector(\".element__img\");\n    this._cardName = this._element.querySelector(\".element__title\");\n    this._likeButton = this._element.querySelector(\".element__like\");\n    this._deleteButton = this._element.querySelector(\".element__delete\");\n    this._likeQuantity = this._element.querySelector('.element__like-quantity');\n  }\n\n  //добавляем лайк карточке\n  _addLikeCard() {\n    return this._likes.find((userLike) => userLike._id === this._currentUserId);\n  }\n\n  //получаем разметку\n  _getTemplate() {\n    const newCard = document\n      .querySelector(this._templateSelector)\n      .content.querySelector(\".element\")\n      .cloneNode(true);\n    return newCard;\n  }\n\n  //вставляем данные в разметку и подготовим карточку к публикации\n  generateCard() {\n    this._setEventListeners();\n\n    this._cardImage.src = this._link;\n    this._cardImage.alt = this._name;\n    this._cardName.textContent = this._name;\n    this._likeQuantity.textContent = this._likes.length;\n\n    if (this._addLikeCard()){\n      this._likeButton.classList.add('element__like_active');\n    } else {\n      this._likeButton.classList.remove('element__like_active');\n    }\n\n    if (!this._isOwner) {\n      this._deleteButton.remove();\n    }\n\n    return this._element;\n  }\n\n  toggleLike(data) {\n    this._likeQuantity.textContent = data.likes.length;\n    this._likeButton.classList.toggle(\"element__like_active\");\n  }\n\n  _setLikes (evt) {\n    if (evt.target.classList.contains('element__like_active')) {\n      this._deleteLikeCard(this._id, this);\n    } else {\n      this._likeCard(this._id, this);\n    }\n  }\n\n  deleteCard() {\n    this._element.remove();\n    this._element = null;\n  }\n\n  _setEventListeners() {\n    this._deleteButton.addEventListener(\"click\", () => {\n      this._handleCardClick(this._id);\n    });\n\n    this._likeButton.addEventListener(\"click\", evt => {\n      this._setLikes(evt);\n    });\n\n    this._cardImage.addEventListener(\"click\", () => {\n      this._zoomImage(this._name, this._link);\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}