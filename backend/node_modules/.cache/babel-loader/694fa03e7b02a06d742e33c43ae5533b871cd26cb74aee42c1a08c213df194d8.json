{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nconst makeRequest = (url, method, body, token) => {\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n  if (token) {\n    options.headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    };\n  }\n  return fetch(`${BASE_URL}${url}`, options).then(res => {\n    if (!res.ok) {\n      throw new Error(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  });\n};\nexport function authorize(email, password) {\n  return makeRequest(\"/signin\", \"POST\", {\n    email,\n    password\n  });\n}\nexport function register(email, password) {\n  return makeRequest(\"/signup\", \"POST\", {\n    password: `${password}`,\n    email: `${email}`\n  });\n}\nexport function getUserData(token) {\n  return makeRequest(\"/users/me\", \"GET\", null, token);\n}","map":{"version":3,"names":["BASE_URL","makeRequest","url","method","body","token","options","headers","JSON","stringify","Accept","Authorization","fetch","then","res","ok","Error","status","json","authorize","email","password","register","getUserData"],"sources":["C:/Users/Надюшонок/Desktop/praktikum/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst makeRequest = (url, method, body, token) => {\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n  }\n  if (token) {\n    options.headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    };\n  }\n  return fetch(`${BASE_URL}${url}`, options).then((res) => {\n    if (!res.ok) {\n      throw new Error(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  });\n};\n\nexport function authorize(email, password) {\n  return makeRequest(\"/signin\", \"POST\", { email, password });\n}\n\nexport function register(email, password) {\n  return makeRequest(\"/signup\", \"POST\", {\n    password: `${password}`,\n    email: `${email}`,\n  });\n}\n\nexport function getUserData(token) {\n  return makeRequest(\"/users/me\", \"GET\", null, token);\n}\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAA+B;AAEvD,MAAMC,WAAW,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,KAAK;EAChD,MAAMC,OAAO,GAAG;IACdH,MAAM;IACNI,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC;EACD,IAAIH,IAAI,EAAE;IACRE,OAAO,CAACF,IAAI,GAAGI,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;EACrC;EACA,IAAIC,KAAK,EAAE;IACTC,OAAO,CAACC,OAAO,GAAG;MAChBG,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAG,UAASN,KAAM;IACjC,CAAC;EACH;EACA,OAAOO,KAAK,CAAE,GAAEZ,QAAS,GAAEE,GAAI,EAAC,EAAEI,OAAO,CAAC,CAACO,IAAI,CAAEC,GAAG,IAAK;IACvD,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAE,WAAUF,GAAG,CAACG,MAAO,EAAC,CAAC;IAC1C;IACA,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,SAASC,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EACzC,OAAOpB,WAAW,CAAC,SAAS,EAAE,MAAM,EAAE;IAAEmB,KAAK;IAAEC;EAAS,CAAC,CAAC;AAC5D;AAEA,OAAO,SAASC,QAAQA,CAACF,KAAK,EAAEC,QAAQ,EAAE;EACxC,OAAOpB,WAAW,CAAC,SAAS,EAAE,MAAM,EAAE;IACpCoB,QAAQ,EAAG,GAAEA,QAAS,EAAC;IACvBD,KAAK,EAAG,GAAEA,KAAM;EAClB,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,WAAWA,CAAClB,KAAK,EAAE;EACjC,OAAOJ,WAAW,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAEI,KAAK,CAAC;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}