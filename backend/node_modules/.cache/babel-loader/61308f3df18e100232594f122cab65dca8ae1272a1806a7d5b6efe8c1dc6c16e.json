{"ast":null,"code":"/* import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  isLoading,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(currentUser.name);\n  const [description, setDescription] = React.useState(currentUser.about);\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [isOpen, currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      id={\"profile\"}\n      title={\"Редактировать профиль\"}\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      buttonText={\"Cохранить\"}\n    >\n      <input\n        id=\"nameEdit-input\"\n        placeholder=\"Имя\"\n        className=\"popup__input popup__input-name\"\n        type=\"text\"\n        name=\"name\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required\n      />\n      <span className=\"popup__error nameEdit-input-error\"></span>\n      <input\n        id=\"jobEdit-input\"\n        placeholder=\"Занятие\"\n        className=\"popup__input popup__input-description\"\n        type=\"text\"\n        name=\"about\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n      />\n      <span className=\"popup__error jobEdit-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n */","map":{"version":3,"names":[],"sources":["C:/Users/Надюшонок/Desktop/praktikum/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["/* import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nexport default function EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  isLoading,\n}) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(currentUser.name);\n  const [description, setDescription] = React.useState(currentUser.about);\n\n  React.useEffect(() => {\n    if (isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [isOpen, currentUser]);\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name: name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      id={\"profile\"}\n      title={\"Редактировать профиль\"}\n      isOpen={isEditProfilePopupOpen}\n      onClose={closeAllPopups}\n      buttonText={\"Cохранить\"}\n    >\n      <input\n        id=\"nameEdit-input\"\n        placeholder=\"Имя\"\n        className=\"popup__input popup__input-name\"\n        type=\"text\"\n        name=\"name\"\n        minLength=\"2\"\n        maxLength=\"40\"\n        required\n      />\n      <span className=\"popup__error nameEdit-input-error\"></span>\n      <input\n        id=\"jobEdit-input\"\n        placeholder=\"Занятие\"\n        className=\"popup__input popup__input-description\"\n        type=\"text\"\n        name=\"about\"\n        minLength=\"2\"\n        maxLength=\"200\"\n        required\n      />\n      <span className=\"popup__error jobEdit-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}